name: Deploy to AWS EKS

on:
  push:
    branches:
      - dev       # Deploy to dev environment
      - staging   # Deploy to staging environment
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 195275643268.dkr.ecr.us-east-1.amazonaws.com

    - name: Build and Tag Docker Image
      run: |
        IMAGE_TAG=$(git rev-parse --short HEAD)  # Use commit hash as version
        docker build -t hello-kubernetes:$IMAGE_TAG .
        docker tag hello-kubernetes:$IMAGE_TAG 195275643268.dkr.ecr.us-east-1.amazonaws.com/hello-kubernetes-repo:$IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Push Docker Image to Amazon ECR
      run: |
        docker push 195275643268.dkr.ecr.us-east-1.amazonaws.com/hello-kubernetes-repo:${{ env.IMAGE_TAG }}
        
    - name: Set up kubectl for EKS
      run: |
        aws eks --region us-east-1 update-kubeconfig --name kube-cluster
      
    - name: Deploy to Kubernetes
      env:
        ENVIRONMENT: ${{ github.ref_name }} # Get branch name
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
        kubectl rollout restart deployment/hello-kubernetes
